var t={};function n(t,e){return function(i,o){return n.modules=i,n.isFetching=o,n.app=t,n.container=e,{actions:{fetching:function(t){return function(){return{fetching:t}}},lazy:{fetching:function(){return function(){return{lazy:{fetching:!0,props:void 0}}}},loaded:function(t){return function(){return{lazy:{view:t,fetching:!1,props:void 0}}}}}},state:{fetching:!1,lazy:{view:null,fetching:!0,props:void 0}}}}}var e=Object.assign,i=function(t){return t.default?t.default:t},o=function(i){var o,a,r,c,s,u,f=i.state,p=t[i.module];return o={view:p.view,actions:e({},i.actions,p.actions),state:e({},f,p.state),props:i.props},a=o.view,c=o.actions,s=n.container,u=e(r=o.state,{lazy:{props:o.props,fetching:!1}}),n.app(u,c,a,s),void(r.fetching&&c.fetching(!1))};exports.createLazy=n,exports.Lazy=function(e){var a=e.module,r=e.props;return function(e,c){return t[a]?o({module:a,state:e,actions:c,props:r}):(s={module:a,state:e,actions:c,props:r},Promise.all([n.modules[s.module].view,n.modules[s.module].actions,n.modules[s.module].state]).then(function(n){var e=n[1],o=n[2],a=i(n[0]);t[s.module]={view:a,state:i(o||{}),actions:i(e)},s.state.fetching&&s.actions.lazy.loaded(a,!1)}),!s.state.fetching&&s.actions.fetching(!0),s.state.fetching&&n.app(!0,{},n.isFetching(!0),n.container.children[0]));var s}};
